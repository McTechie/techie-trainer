import { useEffect, useRef } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import { Navbar } from '../components';
import { KeyIcon } from '@heroicons/react/solid';
import { UserCircleIcon } from '@heroicons/react/outline';
import { useSignup } from '../hooks/useSignup';
import { useLogin } from '../hooks/useLogin';
import { useAuth } from '../hooks/useAuth';

const Login = () => {
  const { user } = useAuth();
  const router = useRouter();

  const usernameRef = useRef(null);
  const passwordRef = useRef(null);

  const { signup, error, setError } = useSignup();
  const { login, error: loginError, setError: setLoginError } = useLogin();

  const handleLogin = async (e) => {
    e.preventDefault();
    
    const username = usernameRef.current.value;
    const password = passwordRef.current.value;
    
    await login(username, password);
  }

  const handleSignup = async (e) => {
    e.preventDefault();

    const username = usernameRef.current.value;
    const password = passwordRef.current.value;

    await signup(username, password);
  }

  useEffect(() => {
    if (user) {
      router.push('/');
    }
  }, [user])

  useEffect(() => {
    setTimeout(() => {
      setError(null);
    }, 5000);
  }, [error]);

  useEffect(() => {
    setTimeout(() => {
      setLoginError(null);
    }, 5000);
  }, [loginError]);

  return (
    <div className='bg-neutral-200 h-screen text-gray-800'>
      <Head>
        <title>Techie Trainer | Fitness made simpler for techies</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Navbar />

      <main className='max-w-lg mx-auto mt-20'>
        <form className='flex flex-col items-center space-y-8 bg-white pb-14 rounded-md shadow-md m-10' onSubmit={handleLogin}>
          <h4 className='text-primary font-bold text-[1.65rem] mt-8 border-primary border-b-4'>
            Let&#39;s Get Started
          </h4>
          <div className='flex flex-col pb-4 pt-2'>
            <label htmlFor='username' className='text-gray-500 my-3 flex items-center font-semibold'>
              <UserCircleIcon className='h-5 mr-2 text-primary'  /> Username:
            </label>
            <input
              type='text'
              name='username'
              id='username'
              aria-labelledby='username'
              className='login-input'
              ref={usernameRef}
              />
            <label htmlFor='password' className='text-gray-500 my-4 flex items-center font-semibold'>
              <KeyIcon className='h-5 mr-2 text-primary' /> Password:
            </label>
            <input
              type='password'
              name='password'
              id='password'
              aria-labelledby='password'
              className='login-input'
              ref={passwordRef}
            />
          </div>
          <div className='flex flex-col space-y-4 lg:space-y-6'>
            <button
              type='submit'
              onClick={handleLogin}
              className='bg-primary rounded-full font-bold text-white border-primary border-4 text-base lg:text-lg w-60 py-2 hover:shadow-lg'
              >
              Login
            </button>
            <button
              onClick={handleSignup}
              className='bg-white rounded-full font-bold text-primary border-primary border-4 text-base lg:text-lg w-60 py-2 hover:shadow-lg'
            >
              Signup
            </button>
          </div>
        </form>

        {error && <div className='bg-rose-200 py-5 my-5 mx-auto border border-rose-500 text-rose-500 text-center rounded-md shadow-md w-96'>
          {error}
        </div>}
      </main>

      {/* Footer */}
    </div>
  );
}
 
export default Login;